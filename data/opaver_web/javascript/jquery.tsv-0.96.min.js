
(function($){$.tsv={version:"0.96-git",options:{formatValue:null,parseValue:null,arrayToObject:null,objectToArray:null,includeHeader:true,stripHeader:false,startRownum:0,___defaults_applied:true,extend:$.extend,syntax:{parserKernel:tsvParserKernel,lexer:/[\t\r\n]|[^\t\r\n]+/g,valueSeparator:"\t",rowSeparator:"\n",formatterKernel:simpleFormatterKernel}},toArray:function toArray(line,options,rownum){var opts=tsvOptions(options);var result=parser(line,true,opts,rownum);switch(result.length){case 0:return[];case 1:return result[0];default:throw new Error("Parser returned too many values.");}},fromArray:function fromArray(array,options,rownum){var opts=tsvOptions(options);opts.includeHeader=(!options||options.includesHeader===undefined)?false:options.includesHeader;return $.tsv.fromArrays([array],opts,rownum);},toArrays:function toArrays(tsv,options){var opts=tsvOptions(options);var array=parser(tsv,false,opts);if(opts.stripHeader){array[-1]=array.shift();}
return array;},fromArrays:function fromArrays(array,options,startRownum){var opts=tsvOptions(options);var rownum=startRownum||opts.startRownum||0;var syntax=opts.syntax;var cols=tsvColumns(opts,array[0]);syntax.formatterKernel("begin");function doHeaderValue(value,col){syntax.formatterKernel("value",value,col,tsvColumn(syntax,col),-1);}
if(cols&&opts.includeHeader){syntax.formatterKernel("beginHeader");cols.forEach(doHeaderValue);syntax.formatterKernel("endHeader");}
var header_offset=0;function doRow(rowData,rowIndex){if(rowData===cols){header_offset=-1;}else{var row=rownum+rowIndex+header_offset;function doValue(value,col){syntax.formatterKernel("value",value,col,tsvColumn(opts,col),row);}
syntax.formatterKernel("beginRow");rowData.forEach(doValue);syntax.formatterKernel("endRow");}}
array.forEach(doRow);return syntax.formatterKernel("end");},arrayToObject:function arrayToObject(row,options,rownum){var opts=tsvOptions(options);rownum=rownum||0;var columns=tsvColumns(opts,row);if(opts.arrayToObject){return opts.arrayToObject(row,opts,rownum);}
var dict={};for(var j=0;j<columns.length;j++){dict[columns[j]]=row[j];}
return dict;},arraysToObjects:function arraysToObjects(array,options){var opts=tsvOptions(options);if(!opts.columns){opts.columns=array.shift();}
var rownum=opts.startRownum||0;return array.map(function convert(row){return $.tsv.arrayToObject(row,opts,rownum++);});},toObjects:function toObjects(tsv,options){var opts=tsvOptions(options);return $.tsv.arraysToObjects($.tsv.toArrays(tsv,opts),opts);},objectToArray:function objectToArray(obj,options,rownum){var opts=tsvOptions(options);var columns=tsvColumns(opts,obj);rownum=rownum||0;if(opts.objectToArray){return opts.objectToArray(obj,opts,rownum);}
var row=[];for(var j=0;j<columns.length;j++){row.push(obj[columns[j]]);}
return row;},objectsToArrays:function objectsToArrays(array,options){var opts=tsvOptions(options);var rownum=options.startRownum;var result=array.map(function convert(obj){return $.tsv.objectToArray(obj,opts,rownum++);});return result;},fromObject:function fromObject(object,options){var opts=tsvOptions(options);return $.tsv.fromArray($.tsv.objectToArray(object,opts),opts);},fromObjects:function fromObjects(array,options){var opts=tsvOptions(options);var first=array.length?array[0]:{};tsvColumns(opts,first);return $.tsv.fromArrays($.tsv.objectsToArrays(array,opts),opts);},extend:$.extend,test:{formatValue:formatValue,parseValue:parseValue}};function parseValue(value,options,colnum,colname,rownum){var opts=tsvOptions(options);if(opts.parseValue){return opts.parseValue(value,opts,colnum,colname,rownum);}
return value;}
function formatValue(value,options,rownum,colnum,colname,rownum){var opts=tsvOptions(options);if(opts.formatValue){return opts.formatValue(value,opts,colnum,colname,rownum);}
return String(value);}
function copyOptions(options){return $.extend({__copy:true},options);}
function tsvOptions(options){if(options){if(options.__defaults_applied){return options;}
return $.extend(copyOptions($.tsv.options),options);}
return copyOptions($.tsv.options);}
function tsvColumn(options,index){var opts=tsvOptions(options);return String(opts.columns?opts.columns[index]:index);}
function tsvColumns(options,top){if(options.columns){return options.columns;}else{var cols=Object.keys(top||{}).sort();options.columns=cols;return cols;}}
function parser(str,single,options,startRow){var opts=tsvOptions(options);var colIdx=0;var rowIdx=startRow||0;function endOfValue(value){value=(value!==undefined)?value:this.value;value=parseValue(value,opts,colIdx,tsvColumn(opts,colIdx),rowIdx);this.row.push(value);this.value="";colIdx++;}
function endOfRow(row){row=(row!==undefined)?row:this.row;this.array.push(row);this.row=[];if(this.single){this.array=this.endOfTable();}
rowIdx++;colIdx=0;}
function endOfHeader(headers){this.headers=(headers||this.headers);}
function endOfTable(result){result=(result!==undefined)?result:this.array;if(!this.done){this.done=true;if(opts.finalize){return opts.finalize.call(this,result);}}
return result;}
var state={options:opts,single:single,state:-1,value:"",row:[],array:[],headers:[],done:false,error:false,endOfValue:endOfValue,endOfRow:endOfRow,endOfTable:endOfTable,endOfHeader:endOfHeader};if(opts.syntax.initializeParser){opts.syntax.initializeParser.call(state,state);}
opts.syntax.lexer.lastIndex=0;str.replace(opts.syntax.lexer,function transition(m0,m1){if(!state.done){opts.syntax.parserKernel.apply(state,arguments);}
if(state.error){throw new Error((typeof error==="string")?state.error:"parsing error");}
return"";});if(!state.done){opts.syntax.parserKernel.apply(state,[]);}
return state.endOfTable();}
function tsvParserKernel(m){switch(m){case"\n":case undefined:if(!this.valueSeen){this.endOfValue("");}
this.endOfRow();this.valueSeen=false;break;case"\r":break;case"\t":if(!this.valueSeen){this.endOfValue("");}
this.valueSeen=false;break;default:this.endOfValue(m);this.valueSeen=true;}}
function simpleFormatterKernel(event,param){switch(event){case"begin":this.valueSeen=false;this.rowSeen=false;this.output=[];break;case"beginRow":case"beginHeader":if(this.rowSeen){this.output.push(this.rowSeparator);}
this.valueSeen=false;break;case"value":if(this.valueSeen){this.output.push(this.valueSeparator);}
this.output.push(param);this.valueSeen=true;break;case"endRow":case"endHeader":this.rowSeen=true;break;case"end":var result=this.output.join("");delete this.output;return result;default:throw new Error("Unknown formatter event: "+event);}}
$.tsv.parseRow=$.tsv.toArray;$.tsv.parseRows=$.tsv.toArrays;$.tsv.parseObject=$.tsv.toObject;$.tsv.parseObjects=$.tsv.toObjects;$.tsv.formatRow=$.tsv.fromArray;$.tsv.formatRows=$.tsv.fromArrays;$.tsv.formatObject=$.tsv.fromObject;$.tsv.formatObjects=$.tsv.fromObjects;if(!$.csv){$.csv=$.tsv.extend({},{toArrays:function csvToArrays(csv,options){var opts=tsvOptions(options);var state=0;var value="";var result=[];var row=[];function endOfCell(){row.push(value);value="";state=0;}
function endOfRow(){row.push(value);result.push(row);row=[];state=0;}
s.replace(/(\"|,|\n|\r|[^\",\r\n]+)/gm,function(m0,m1){switch(state){case 0:if(m1==="\""){state=1;}else if(m1===","){endOfCell();}else if(m1==="\n"){endOfRow();}else if(/^\r$/.test(m1)){}else{if(value){throw new Error("Internal error: we have a value already.");}
value=m1;state=3;}
break;case 1:if(m1==="\""){state=2;}else if((m1===",")||(m1==="\n")||(m1==="\r")){value+=m1;state=1;}else{value+=m1;state=1;}
break;case 2:if(m1==="\""){value+=m1;state=1;}else if(m1===","){endOfCell();}else if(m1==="\n"){endOfRow();}else if(m1==="\r"){}else{throw new Error("Illegal state");}
break;case 3:if(m1==="\""){throw new Error("Unquoted delimiter in string");}else if(m1===","){endOfCell();}else if(m1==="\n"){endOfRow();}else if(m1==="\r"){}else{throw new Error("Two values, no separator?");}
break;default:throw new Error("Unknown state");}
return"";});if(state!=0){endOfRow();}
return result;}});}})(jQuery);