omics = {};
omics.common = {
	prev_mapid: [],
	annojson: {},
	dir: "./output",
	mapdiv: "omicsPathViewer",
	global_overview_pwy: {
			"01100": "Metabolic pathways",
			"01110": "Biosynthesis of secondary metabolites",
			"01120": "Microbial metabolism in diverse environments",
			"01200": "Carbon metabolism",
			"01210": "2-Oxocarboxylic acid metabolism",
			"01212": "Fatty acid metabolism",
			"01230": "Biosynthesis of amino acids",
			"01220": "Degradation of aromatic compounds"
	},

	getURLParameter: function(sParam){
		var sPageURL = window.location.search.substring(1);
		var sURLVariables = sPageURL.split('&');
		for (var i = 0; i < sURLVariables.length; i++) 
		{
			var sParameterName = sURLVariables[i].split('=');
			if (sParameterName[0] == sParam) 
			{
				return sParameterName[1];
			}
		}
	},
	
	isDefined: function(variable){
		if( typeof(variable) == 'undefined' ){
			return false;
		}
		return true;
	}
};

omics.pathViewer = function(){
	var mapid,
		showicon;

	return function(mapid, gene_show, org){
		/* Privileged Methods */
		this.addSelector = function(mapdiv){
			var pwytab = omics.common.dir+'/exp_pathway.txt';
			$.get( pwytab, function(data){
				var selectdivdom = $('<div class="ui-field-contain">');
				var selectdom = $('<select name="pathway-selector" id="pathway-selector" data-mini="true">');
				selectdom.append($('<option>select a KEGG map</option>'));
				var tsv = $.tsv.parseRows(data);
				$.each(tsv, function(idx,pwy){
					var note = "";
					if( omics.common.isDefined(omics.common.global_overview_pwy[pwy[0]]) ){ note = " [View only]"; }
					if( omics.common.isDefined(pwy[1]) ){
						var odom = $('<option id="map_selec'+pwy[0]+'" value="'+pwy[0]+'">'+pwy[0]+' '+pwy[2]+' ('+pwy[1]+') '+note+'</option>');
						selectdom.append(odom);
					}
				});
				selectdom.on("change",function(){
					if( this.value ){
						drawMap(this.value);
					}
				});
				selectdivdom.append($('<label for="pathway-selector" style="width:inherit;">KEGG Pathway Map:</label>'));
				selectdivdom.append(selectdom);
				$("#"+mapdiv).before(selectdivdom);
				selectdom.selectmenu({ inline: true })
			});
		};
	
		/* CONSTRUCTOR */
		omics.pathViewer.drawMap(mapid, showicon, org);
		addSelector(omics.pathViewer.mapdiv);
	}
}();
omics.pathViewer.prototype = {
};

omics.pathViewer.drawMap = {};
omics.pathViewer.drawMap = function(mapid, showicon, org) {
	mapdiv     = omics.common.mapdiv;
	mapid      = mapid || "00230";                    //initial map
	showicon   = showicon || 2;                       //show number of genes icon if number of genes > gene_show
	org        = org || "ko";                         //default organism
	type       = org === "ko" ? "ortholog" : "gene";  //enzyme rect type
	var mapxml = omics.common.dir+'/'+org+mapid+'.xml';
	var expjson = omics.common.dir+'/'+org+mapid+'.exp.json';

	$("#"+mapdiv).load(function(){
		//clean map
		$("#"+mapdiv).empty();

		//loading background pathway map		
		$("#"+mapdiv).width(0);
		$("#"+mapdiv).height(0);
		var mapImg = $("<img id='map-image'>");
		mapImg.attr("src", omics.common.dir+"/"+org+mapid+".pathview.multi.png");
		$("#"+mapdiv).append(mapImg);
	});

	$("#"+mapdiv+" img").load(function(){
		var originalWidth = $("#"+mapdiv+" img")[0].naturalWidth; 
		var originalHeight = $("#"+mapdiv+" img")[0].naturalHeight;
		$("#"+mapdiv).width(originalWidth);
		$("#"+mapdiv).height(originalHeight);

		//create map title
		var titledom = $('<div class="main_title">');
		var note = "";
		if( omics.common.isDefined(omics.common.global_overview_pwy[mapid]) ){ note = " [Global and overview pathways are not supported]"; }
		titledom.html("Pathway: "+org+mapid+note+" ");

		if( omics.common.prev_mapid.length > 0 ){
			var backbtn = $('<a href="#" data-mini="true" class="ui-btn ui-icon-back ui-btn-icon-notext ui-corner-all">');
			backbtn.on("click",function(){
				mapid = omics.common.prev_mapid.pop(); //the first one is current map
				mapid = omics.common.prev_mapid.pop();
				omics.viewer.drawMap("keggmap", mapid, showicon);
			});
			titledom.append(backbtn);
		}
		$("#"+mapdiv).append(titledom);
	});

	//load expression/annotation json file
	$.getJSON( expjson, function(data){
		omics.common.annojson=data;
	}).fail(
		function() { alert( "ERROR: Failed to read json file from "+expjson+"." ); }
	);

	//load KGML
	$.ajax({
		type: "get",
		url: mapxml,
		dataType: "xml",
		beforeSend: function(){
			$.mobile.loading( "show", {
  					text: "Loading KEGG map"+mapid+"...",
  					textVisible: true,
  					theme: "b"
			});
		},
		complete: function(){
			$.mobile.loading( "hide" );
		},
		success: function(data) {
			//COMPOUND
			$(data).find( "graphics[name^='C']" ).each(function(){
				var url = $(this).parent().attr("link");
				var name = $(this).attr("name");
				var x = $(this).attr("x")-$(this).attr("width")/2;
				var y = $(this).attr("y")-$(this).attr("height")/2;
				var dom;
				dom = "<a class='compound-area' href='"+url+"' target='new' title='COMPOUND: "+name+" &lt;br/&gt; &lt;img src=&quot;http://rest.kegg.jp/get/"+name+"/image&quot;/&gt;' style='left:"+x+"px;top:"+y+"px;'></a>";
				$("#"+mapdiv).append(dom);
			});
			$("#"+mapdiv+" .compound-area").tooltipster({contentAsHTML: true, arrow: false, offsetX: 4, offsetY: 20, position: 'right', interactive: true});

			//ENZYME
			$(data).find( "entry[type='"+type+"'] > graphics" ).each(function(){
				var url = $(this).parent().attr("link");
				var name = $(this).parent().attr("name");
				var x = $(this).attr("x")-1-$(this).attr("width")/2;
				var y = $(this).attr("y")-2-$(this).attr("height")/2;
				var dom;
				dom = "<a class='enzyme-area' alt='"+name+"' href='"+url+"' target='new' title='"+name+"' style='left:"+x+"px;top:"+y+"px;'></a>";
				var jdom = $(dom);
				jdom.tooltipster({interactive: true});
				jdom.appendTo($("#"+mapdiv));

				//check if tooltip needs
				var regex = new RegExp( org+":","g")
				var idstring = name.replace( regex, "");
				var idarray = idstring.split(" ");
				var ids = $.map( idarray, function( id, i ) {
					//for UNKNOWN reason, annojson became undefined occasionally
					//the temporary solution is trying to reload again
					//if( typeof(annojson) == 'undefined' ){
					//	$.getJSON( expjson, function(data){annojson=data;});
					//}
					if( omics.common.isDefined(omics.common.annojson[id]) ){
						return id;
					}
				});

				var tooltipcontent = $( '<div>' );
				var tranIcon       = $( '<div class="gene-number-icon tran-number">' ).html(0);
				var protIcon       = $( '<div class="gene-number-icon prot-number">' ).html(0);

				$.each(ids, function(index,id){
					//add transcriptomic gene number icon
					if( $(omics.common.annojson[id].tran).length ){
						var x=jdom.width()-6;
						var y=-8;
						contentdom = tranIcon;
						var num = contentdom.html();
						var tolnum = parseInt(num) + Object.keys(omics.common.annojson[id].tran).length;
						contentdom.html( tolnum );
						contentdom.css( "left", x+"px" );
						contentdom.css( "top", y+"px" );
					}
					//add proteomic gene number icon
					if( $(omics.common.annojson[id].prot).length ){
						var x=-6;
						var y=-8;
						contentdom = protIcon;
						var num = contentdom.html();
						var tolnum = parseInt(num) + Object.keys(omics.common.annojson[id].prot).length;
						contentdom.html( tolnum );
						contentdom.css( "left", x+"px" );
						contentdom.css( "top", y+"px" );
					}

					//tooltip content
					//KEGG ID information
					var idtag = $('<span class="tag-label">'+org+':'+id+'</span>');
					idtag.on("click", function(){
						$("#"+mapdiv).find("a.enzyme-area.glow").removeClass("glow");
						$("#"+mapdiv).find("a.enzyme-area[alt*='"+id+"']").addClass("glow");
					});

					tooltipcontent.append(idtag);
					var tabledom = $('<table data-role="table" data-mode="reflow" class="gene-info ui-responsive">');
					var tbodydom = $('<tbody>');
					$('<tr>')
						.append( $('<td>').html('Name') )
						.append( $('<td>').html( omics.common.annojson[id].info.name ) )
						.appendTo(tbodydom);
					
					var pathwayTd = $('<td>');
					var pwys = omics.common.annojson[id].info.pathway.split(", ");
					$.each( pwys, function(idx, pwy){
						$('<a data-ajax="false" style="margin-right:0.5em">')
							.html(pwy)
							.on("click",function(){ if(pwy!=mapid){omics.viewer.drawMap("keggmap", pwy, showicon);}})
							.appendTo( pathwayTd );
					});

					$('<tr>')
						.append( $('<td>').html('Pathway') )
						.append( pathwayTd )
						.appendTo(tbodydom);
					$('<tr>')
						.append( $('<td>').html('Desc') )
						.append( $('<td>').html( omics.common.annojson[id].info.definition ) )
						.appendTo(tbodydom);
					tabledom.table();
					tabledom.append(tbodydom);
					tooltipcontent.append(tabledom);
					
					//add proteomics gene info
					if( $(omics.common.annojson[id].prot).length ){
						tooltipcontent.append($('<span>').html("Proteomics ("+Object.keys(omics.common.annojson[id].prot).length+")"));

						var tabledom = $('<table data-role="table" data-mode="reflow" class="gene-info ui-responsive">');
						var theaddom = $('<thead>');
						$('<tr>').append( $('<th>').html('Gene') )
							 .append( $('<th>').html('P-value') )
							 .append( $('<th>').html('logFC') )
							 .appendTo(theaddom);
						
						var tbodydom = $('<tbody>');
						$.each(omics.common.annojson[id].prot,function(gene,ginfo){
							$('<tr>').append( $('<td>').html( gene ) )
								 .append( $('<td>').html( ginfo.pvalue ) )
								 .append( $('<td>').html( ginfo.logfc ) )
								 .appendTo(tbodydom);
						});

						tabledom.table();
						tabledom.append(theaddom);
						tabledom.append(tbodydom);
						tooltipcontent.append(tabledom);
					}

					//add transcriptomic gene info
					if( $(omics.common.annojson[id].tran).length ){
						tooltipcontent.append($('<span>').html("Transcriptomics ("+Object.keys(omics.common.annojson[id].tran).length+")"));

						var tabledom = $('<table data-role="table" data-mode="reflow" class="gene-info ui-responsive">');
						var theaddom = $('<thead>');
						$('<tr>').append( $('<th>').html('Gene') )
							 .append( $('<th>').html('P-value') )
							 .append( $('<th>').html('logFC') )
							 .appendTo(theaddom);
						
						var tbodydom = $('<tbody>');
						$.each(omics.common.annojson[id].tran,function(gene,ginfo){
							$('<tr>').append( $('<td>').html( gene ) )
								 .append( $('<td>').html( ginfo.pvalue ) )
								 .append( $('<td>').html( ginfo.logfc ) )
								 .appendTo(tbodydom);
						});

						tabledom.table();
						tabledom.append(theaddom);
						tabledom.append(tbodydom);
						tooltipcontent.append(tabledom);
					}
				});

				if( ids.length && !omics.common.isDefined(omics.common.global_overview_pwy[mapid]) ){
					if( parseInt(tranIcon.html()) >= showicon ){
						jdom.append(tranIcon)
					}
					if( parseInt(protIcon.html()) >= showicon ){
						jdom.append(protIcon)
					}
					jdom.tooltipster('destroy');
					jdom.tooltipster({content: tooltipcontent, arrow: false, interactive: true, offsetY: -100, position: 'right'});
				}
			});
			//save current mapid
			omics.common.prev_mapid.push(mapid);
		},
		error: function() {
			var popupdom = $('<div data-role="popup" id="popupDialog" data-overlay-theme="b" data-theme="b" data-dismissible="false" style="max-width:400px;">');
 				var popupheader = $('<div data-role="header" data-theme="a">').append($('<h2>Pathway Not Available</h2>'));
			popupdom.append(popupheader);
			
			var popmain = $('<div role="main" class="ui-content">')
			    		.append($('<h3 class="ui-title">Global and overview pathways are not supported.</h3>'))
			    		.append($('<p>Press OK to bring you back.</p>'))
			    		.append($('<a href="#" class="ui-btn ui-corner-all ui-shadow ui-btn-inline ui-btn-b" data-rel="back">Ok</a>'));
			popupdom.append(popmain);
			popupdom.popup({
				afterclose: function( event, ui ) {
					mapid = omics.common.prev_mapid.pop();
					omics.viewer.drawMap("keggmap", mapid, showicon);
				}
			});
			//$("#"+mapdiv).append(popupdom);
			popupdom.popup('open');
		}
	});
}();