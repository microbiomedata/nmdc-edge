version <VERSION>
import "<WDL_IMPORT>" as <WORKFLOW>
import "readsqc_output.wdl" as readsqc_output
import "readsqc_preprocess.wdl" as readsqc_preprocess

workflow main_workflow {
    input {
        Array[File] <WORKFLOW>_input_files
        String      <WORKFLOW>_outdir
        Boolean     <WORKFLOW>_input_interleaved=true
        Boolean     <WORKFLOW>_short_read=true
        Array[File] <WORKFLOW>_input_fq1
        Array[File] <WORKFLOW>_input_fq2
        String      <WORKFLOW>_prefix
        String      <WORKFLOW>_vis_container="ghcr.io/microbiomedata/nmdc-fastqc_vis:1.1.2"
    }

    call readsqc_preprocess.readsqc_preprocess as readsqc_preprocess {
        input:
            input_files=<WORKFLOW>_input_files,
            input_fq1=<WORKFLOW>_input_fq1,
            input_fq2=<WORKFLOW>_input_fq2,
            outdir=<WORKFLOW>_outdir,
            input_interleaved=<WORKFLOW>_input_interleaved,
            shortRead=<WORKFLOW>_short_read
    }

    scatter (file in select_first([readsqc_preprocess.input_files_gz, [""]])) {
        call <WORKFLOW>.rqcfilter as nmdc_rqcfilter_call {
            input:
                input_files=[file],
                input_fq1=[],
                input_fq2=[],
                proj=<WORKFLOW>_prefix,
                interleaved=true,
                shortRead=<WORKFLOW>_short_read
        }
    }

    call readsqc_output.readsqc_output as readsqc_output {
        input:
            input_files = select_all(nmdc_rqcfilter_call.filtered_final),
            input_files_prefix = select_first([readsqc_preprocess.input_files_prefix, []]),
            filtered_stats_final = select_all(nmdc_rqcfilter_call.filtered_stats_final),
            filtered_stats2_final = select_all(nmdc_rqcfilter_call.filtered_stats2_final),
            filtered_stat_json = select_all(nmdc_rqcfilter_call.stats),
            rqc_info = select_all(nmdc_rqcfilter_call.rqc_info),
            outdir = <WORKFLOW>_outdir,
            vis_container = <WORKFLOW>_vis_container
    }
}
