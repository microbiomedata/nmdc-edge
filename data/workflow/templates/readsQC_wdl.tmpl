input {
    Array[File] <WORKFLOW>_input_files
    String? <WORKFLOW>_outdir
    String <WORKFLOW>_bbtools_container="microbiomedata/bbtools:38.92"
    String <WORKFLOW>_database="/refdata"
    String <WORKFLOW>_memory="60g"
    String <WORKFLOW>_threads="4"
    Boolean <WORKFLOW>_input_interleaved=true
    Array[File] <WORKFLOW>_input_fq1
    Array[File] <WORKFLOW>_input_fq2
    String? <WORKFLOW>_prefix
}

call readsqc_preprocess.readsqc_preprocess as readsqc_preprocess {
    input:
        input_files=<WORKFLOW>_input_files,
        outdir=<WORKFLOW>_outdir,
        input_interleaved=<WORKFLOW>_input_interleaved,
        input_fq1=<WORKFLOW>_input_fq1,
        input_fq2=<WORKFLOW>_input_fq2
}

call readsQC.ShortReadsQC as nmdc_rqcfilter_call {
    input:
        input_files=<WORKFLOW>_input_files,
        input_fq1=<WORKFLOW>_input_fq1,
        input_fq2=<WORKFLOW>_input_fq2,
        proj=<WORKFLOW>_prefix,
}

call <WORKFLOW>_output.readsqc_output as readsqc_output {
    input:
        input_files = <WORKFLOW>_input_files,
        input_files_prefix = select_first([readsqc_preprocess.input_files_prefix, [""]]),
        filtered_stats_final = nmdc_rqcfilter_call.filtered_stats_final,
        filtered_stats2_final = nmdc_rqcfilter_call.filtered_stats2_final,
        rqc_info = nmdc_rqcfilter_call.rqc_info, 
        outdir=<WORKFLOW>_outdir
}
