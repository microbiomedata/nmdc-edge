    Array[File] <WORKFLOW>_reads
    Int <WORKFLOW>_cpu = 4
    String <WORKFLOW>_prefix
    String <WORKFLOW>_outdir
    Boolean? <WORKFLOW>_paired = false

    String <WORKFLOW>_db_gottcha2 = "/refdata/GOTTCHA2/RefSeq-r90.cg.BacteriaArchaeaViruses.species.fna"
    String <WORKFLOW>_db_kraken2 = "/refdata/Kraken2"
    String <WORKFLOW>_db_centrifuge = "/refdata/Centrifuge/hpv"

    call readbasedanalysis_preprocess.preprocess as preprocess {
        input:
            input_files=<WORKFLOW>_reads,
            paired=<WORKFLOW>_paired
    }
    call <WORKFLOW>.ReadbasedAnalysis as <ALIAS> {
        input: input_file=preprocess.input_file_gz, cpu=<WORKFLOW>_cpu, proj=<WORKFLOW>_prefix,paired=<WORKFLOW>_paired,
        db_gottcha2=<WORKFLOW>_db_gottcha2, db_kraken2=<WORKFLOW>_db_kraken2, db_centrifuge=<WORKFLOW>_db_centrifuge
    }

    call readbasedAnalysis_output.readbasedAnalysis_output as readbasedAnalysis_output {
        input: gottcha2_report_tsv=<ALIAS>.final_gottcha2_report_tsv, gottcha2_full_tsv=<ALIAS>.final_gottcha2_full_tsv,
        gottcha2_krona_html=<ALIAS>.final_gottcha2_krona_html, kraken2_report_tsv=<ALIAS>.final_kraken2_report_tsv,
        kraken2_classification_tsv=<ALIAS>.final_kraken2_classification_tsv, kraken2_krona_html=<ALIAS>.final_kraken2_krona_html,
        centrifuge_report_tsv=<ALIAS>.final_centrifuge_report_tsv,
        centrifuge_classification_tsv=<ALIAS>.final_centrifuge_classification_tsv,
        centrifuge_krona_html=<ALIAS>.final_centrifuge_krona_html, prefix=<WORKFLOW>_prefix

    }
