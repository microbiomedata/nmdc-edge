    Array[File] <WORKFLOW>_input_file
    String? <WORKFLOW>_outdir
    String <WORKFLOW>_rename_contig_prefix="scaffold"
    Float <WORKFLOW>_uniquekmer=1000
    String <WORKFLOW>_bbtools_container="microbiomedata/bbtools:38.92"
    String <WORKFLOW>_spades_container="microbiomedata/spades:3.15.0"
    String <WORKFLOW>_memory="100g"
    String <WORKFLOW>_threads="4"
    Boolean <WORKFLOW>_input_interleaved=true
    Array[File] <WORKFLOW>_input_fq1
    Array[File] <WORKFLOW>_input_fq2
    String <WORKFLOW>_prefix

    call <WORKFLOW>_preprocess.preprocess as preprocess {
        input:
            input_files=<WORKFLOW>_input_file,
		    outdir=<WORKFLOW>_outdir,
            input_interleaved=<WORKFLOW>_input_interleaved,
            input_fq1=<WORKFLOW>_input_fq1,
            input_fq2=<WORKFLOW>_input_fq2
    }
    call <WORKFLOW>.jgi_metaASM as <ALIAS> {
        input: 
		input_file=select_first([preprocess.input_files_gz, [""]]),
		proj=<WORKFLOW>_prefix,
		outdir=<WORKFLOW>_outdir, 
		rename_contig_prefix=<WORKFLOW>_rename_contig_prefix, 
		uniquekmer=<WORKFLOW>_uniquekmer, 
		bbtools_container=<WORKFLOW>_bbtools_container, 
		spades_container=<WORKFLOW>_spades_container, 
		memory=<WORKFLOW>_memory, 
		threads=<WORKFLOW>_threads
    }

    call <WORKFLOW>.jgi_assembly_output as jgi_assembly_output {
        input:
        outdir=<WORKFLOW>_outdir,
        container=<WORKFLOW>_bbtools_container,
        contigs=jgi_metaASM.contigs,
        scaffolds=jgi_metaASM.scaffolds,
        agp=jgi_metaASM.agp,
        bam=jgi_metaASM.bam,
        samgz=jgi_metaASM.samgz,
        covstats=jgi_metaASM.covstats,
        asmstats=jgi_metaASM.asmstats

    }
