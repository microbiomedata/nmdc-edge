version <VERSION>
import "<WDL_IMPORT>" as <WORKFLOW>
import "assembly_preprocess.wdl" as <WORKFLOW>_preprocess
import "assembly_output.wdl" as <WORKFLOW>Output

workflow main_workflow {
    input {
        Array[String] <WORKFLOW>_input_files
        String        <WORKFLOW>_outdir
        Float         <WORKFLOW>_uniquekmer=1000
        String        <WORKFLOW>_bbtools_container="microbiomedata/bbtools:38.96"
        String        <WORKFLOW>_spades_container="microbiomedata/spades:3.15.0"
        String        <WORKFLOW>_quast_container="staphb/quast:5.2.0-slim"
        String        <WORKFLOW>_memory="100g"
        String        <WORKFLOW>_threads="4"
        Boolean       <WORKFLOW>_input_interleaved=true
        Array[File]   <WORKFLOW>_input_fq1
        Array[File]   <WORKFLOW>_input_fq2
        String        <WORKFLOW>_prefix
        Boolean       <WORKFLOW>_short_read=true
    }

    call <WORKFLOW>_preprocess.preprocess as preprocess {
        input:
            input_files=<WORKFLOW>_input_files,
            outdir=<WORKFLOW>_outdir,
            input_interleaved=<WORKFLOW>_input_interleaved,
            input_fq1=<WORKFLOW>_input_fq1,
            input_fq2=<WORKFLOW>_input_fq2
    }
    call <WORKFLOW>.jgi_metaAssembly as <ALIAS> {
        input:
            input_files=select_all([preprocess.input_file_gz]),
            proj=<WORKFLOW>_prefix,
            memory=<WORKFLOW>_memory,
            threads=<WORKFLOW>_threads,
            shortRead=<WORKFLOW>_short_read
    }

    call <WORKFLOW>Output.assembly_output as assembly_output{
        input:
            contigs=if(<WORKFLOW>_short_read) then <ALIAS>.sr_contig else <ALIAS>.lr_contigs,
            container=<WORKFLOW>_quast_container,
            outdir=<WORKFLOW>_outdir,
            proj=<WORKFLOW>_prefix
    }

    output {
        File? contig = if(<WORKFLOW>_short_read) then <ALIAS>.sr_contig else <ALIAS>.lr_contigs
        File? scaffold = if(<WORKFLOW>_short_read) then <ALIAS>.sr_scaffold else <ALIAS>.lr_scaffolds
        File? agp = if(<WORKFLOW>_short_read) then <ALIAS>.sr_agp else <ALIAS>.lr_agp
        File? bam = if(<WORKFLOW>_short_read) then <ALIAS>.sr_bam else <ALIAS>.lr_bam 
        File? samgz = if(<WORKFLOW>_short_read) then <ALIAS>.sr_samgz else <ALIAS>.lr_sam
        File? covstats = if(<WORKFLOW>_short_read) then <ALIAS>.sr_covstats else <ALIAS>.lr_basecov
        File? asmstats = <ALIAS>.stats
        File? asminfo = if(<WORKFLOW>_short_read) then <ALIAS>.sr_asminfo else <ALIAS>.lr_asminfo
        File asmreportHtml = assembly_output.report_html
        File asmreportTxt = assembly_output.report_txt
    }
}