import React, { useState, useEffect } from 'react';
import {
    Button, ButtonGroup, Col, Row,
} from 'reactstrap';

import FileSelector from '../../../common/FileSelector';
import { WarningTooltip } from '../../../common/MyTooltip';
import { initialConfigFile } from './Defaults';

export function ConfigFile(props) {
    const [confFile, setConfFile] = useState();

    const [
        form,
        setState
    ] = useState({...initialConfigFile});

    const setNewState2 = (name, value) => {
        setState({
            ...form,
            [name]: value
        });
    }

    useEffect(() => {
        setState({ ...initialConfigFile });
        setConfFile();
    }, [props.reset]);

    const handleUseConfFileChange = (checked) => {
        setNewState2('use_conf_file', checked);
        setConfFile();
    }

    const handleConfSelection = (conf) => {
        setConfFile(conf);
    }

    //trigger validation method when input changes
    useEffect(() => {
        if (confFile) {
            form.validForm = true;
            form.conf_file_path = confFile;
            form.errMessage = '';
        } else {
            form.validForm = false;
            form.errMessage = 'Config file required';
        }
        //force updating parent's inputParams
        props.setParams(form, props.type);
    }, [confFile]);

    return (
        <>
            <Row className="justify-content-center">
                <Col md="3"> Use a Config File?
                    {form.use_conf_file && form.errMessage && <WarningTooltip id='confFile' tooltip={form.errMessage} />}</Col>
                <Col xs="12" md="9">
                    <ButtonGroup className="mr-3" aria-label="First group" size="sm">
                        <Button color="outline-primary" onClick={() => handleUseConfFileChange(true)}
                            active={form.use_conf_file}>Yes</Button>
                        <Button color="outline-primary" onClick={() => handleUseConfFileChange(false)}
                            active={!form.use_conf_file}>No</Button>
                    </ButtonGroup>
                </Col>
            </Row>
            <Row>
                <Col>
                    <span className="text-muted edge-text-size-small">Your customized parameters can be used again.
                    You can utilize the file selector to choose a standard config file generated by EDGE bioinformatics.
                                    </span>
                </Col>
            </Row>
            {form.use_conf_file &&
                <>
                    <br></br>
                    <Row>
                        <Col md="3"></Col>
                        <Col md="9">
                            <FileSelector placeholder="Select a config file" onChange={handleConfSelection}
                                projectTypes={props.projectTypes} dataSources={['project']}
                                projectStatuses={['in queue', 'running', 'failed', 'complete', 'processing', 'submitted']}
                                fileTypes={['conf.json']} viewFile={true} viewFileType={'json'} disableInput={true} />
                        </Col>
                    </Row>
                </>
            }
        </>
    );
}
